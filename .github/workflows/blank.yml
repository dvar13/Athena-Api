name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Instalar dependencias de test (mock)
        run: |
          python3 -m venv env-test
          source env-test/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ejecutar tests sincronizados
        run: |
          source env-test/bin/activate
          pytest -v tests/sync --maxfail=1 --disable-warnings
  
  test-async:
    runs-on: ubuntu-latest
    needs: test-sync
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Instalar dependencias de test async
        run: |
          python3 -m venv env-test
          source env-test/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ejecutar tests con Athena (async)
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          ATHENA_DATABASE: ${{ secrets.ATHENA_DATABASE }}
          ATHENA_OUTPUT: ${{ secrets.ATHENA_OUTPUT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          API_BASE_URL: http://${{ secrets.EC2_HOST }}:8000
        run: |
          source env-test/bin/activate
          pytest -v tests/async --maxfail=1 --disable-warnings
